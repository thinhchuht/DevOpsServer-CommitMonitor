// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommitPushNoti.Infrastructures.Migrations
{
    [DbContext(typeof(DevopsContext))]
    [Migration("20241129075109_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Collection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.CommitDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Collection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineChange")
                        .HasColumnType("int");

                    b.Property<string>("Project")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepositoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RepositoryId");

                    b.HasIndex("UserId");

                    b.ToTable("CommitDetail");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Project", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<string>("CollectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "description");

                    b.Property<DateTime>("LastUpdateTime")
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "lastUpdateTime");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "name");

                    b.Property<int>("Revision")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "revision");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "state");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "url");

                    b.Property<string>("Visibility")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "visibility");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Repository", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RemoteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Repositories");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.UserCollection", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CollectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "CollectionId");

                    b.HasIndex("CollectionId");

                    b.ToTable("UserCollection");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.CommitDetail", b =>
                {
                    b.HasOne("CommitPushNoti.Infracstructures.Models.Repository", "Repository")
                        .WithMany("CommitDetails")
                        .HasForeignKey("RepositoryId");

                    b.HasOne("CommitPushNoti.Infracstructures.Models.User", "User")
                        .WithMany("CommitDetails")
                        .HasForeignKey("UserId");

                    b.Navigation("Repository");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Project", b =>
                {
                    b.HasOne("CommitPushNoti.Infracstructures.Models.Collection", "Collection")
                        .WithMany("Projects")
                        .HasForeignKey("CollectionId");

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Repository", b =>
                {
                    b.HasOne("CommitPushNoti.Infracstructures.Models.Project", "Project")
                        .WithMany("Repositories")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.UserCollection", b =>
                {
                    b.HasOne("CommitPushNoti.Infracstructures.Models.Collection", "Collection")
                        .WithMany("UserCollection")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CommitPushNoti.Infracstructures.Models.User", "User")
                        .WithMany("UserCollection")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Collection", b =>
                {
                    b.Navigation("Projects");

                    b.Navigation("UserCollection");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Project", b =>
                {
                    b.Navigation("Repositories");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.Repository", b =>
                {
                    b.Navigation("CommitDetails");
                });

            modelBuilder.Entity("CommitPushNoti.Infracstructures.Models.User", b =>
                {
                    b.Navigation("CommitDetails");

                    b.Navigation("UserCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
